PROMPT_TEMPLATE = """
Ты — финансовый ассистент, который анализирует поведение клиента и предлагает персональные push-уведомления.
Твоя цель — помочь клиенту контролировать расходы, формировать сбережения и замечать возможности для дохода.
Используй только предоставленные категории расходов, переводы и продукты. Если не хватает данных — делай консервативные рекомендации.

## Контекст:
- Профиль клиента:
  - Имя: {client_name}
  - Статус: {client_status}
  - Возраст: {client_age}
  - Город: {client_city}
  - Средний месячный баланс (KZT): {avg_monthly_balance}

- Транзакции за последние 3 месяца:
  - Расходы по категориям:
    {total_transactions}

- Трансферы за последние 3 месяца:
  - Полученные переводы (IN):
    {total_transfers_in}
    - Детализация:
      {transfer_sums_by_direction_type_in}
  - Переводы другим (OUT):
    {total_transfers_out}
    - Детализация:
      {transfer_sums_by_direction_type_out}
  - Общее движение средств:
    {total_transfers}


- Каталог доступных банковских продуктов:
  1) Кредит наличными → если расходы превышают баланс или есть большие исходящие переводы.
  2) Депозит Мультивалютный → выгоден клиентам с доходами/переводами в разных валютах.
  3) Депозит Сберегательный → для тех, кто копит и не планирует тратить ближайшее время.
  4) Депозит Накопительный → для клиентов с регулярными расходами, кто хочет откладывать постепенно.

## Задача:
1) Проанализируй расходы по транзакциям: категории, суммы, валюты.
2) Проанализируй трансферы отдельно: направление (IN/OUT), объёмы, валюты.
3) Если клиент получает доходы в разных валютах → рассмотри мультивалютный депозит.
4) Если OUT >> IN и баланс убывает → рассмотри кредит наличными.
5) Если расходы концентрируются на развлечениях («Игры», «Кино», «Доставка») → кредитная карта.
6) Подбери РОВНО один продукт из каталога, который лучше всего подходит профилю и поведению клиента.
7) Добавь уровень уверенности (accuracy), от 0 до 10, где 10 = абсолютно уверен.
8) Если среднемесячный остаток меньше 100 000 тенге, не стоит рекомендовать продукты 3)Депозит Мультивалютный и 4)Депозит Накопительный.
9) Депозит Сберегательный подходит больше для людей чей возраст превышает 30 лет.

10) Если в месяц остается достаточное количество денег делай приоритет депозитам. 

## Формат ответа (строго JSON, БЕЗ ДОПОЛНИТЕЛЬНЫХ СИМВОЛОВ):
{{
  "product_suggestion": {{
    "name": "продукт"
  }},
  "accuracy": 0-10
}}
"""


def get_recomended_product(client) -> dict:
  from openai import OpenAI
  import json

  detailed_transfer_in_json = json.dumps(client.transfer_sums_by_direction_type.get("in", {}), ensure_ascii=False, indent=2)
  detailed_transfer_out_json = json.dumps(client.transfer_sums_by_direction_type.get("out", {}), ensure_ascii=False, indent=2)
  
  prompt = PROMPT_TEMPLATE.format(
     client_name=client.name,
     client_status=client.status,
     client_age=client.age,
     client_city=client.city,
     avg_monthly_balance=client.avg_monthly_balance_KZT,
     total_transactions=client.total_transactions,
     total_transfers_in=client.total_transfers_in,
     transfer_sums_by_direction_type_in=detailed_transfer_in_json,
     total_transfers_out=client.total_transfers_out,
     transfer_sums_by_direction_type_out=detailed_transfer_out_json,
     total_transfers=client.total_transfers,
     )
  
  client = OpenAI()

  response = client.chat.completions.create(
    model="gpt-4o-mini",   # or "gpt-4o", "gpt-3.5-turbo", etc.
    messages=[
        {"role": "system", "content": "Ты умный ассистент банка."},
        {"role": "user", "content": prompt}
    ],
    temperature=0.3
  )
  result = response.choices[0].message.content

  parsed = {}
  try:
    parsed = json.loads(result)
  except:
     print(f"Invalid response from chat gpt")

  product_name = parsed["product_suggestion"]["name"]
  accuracy = parsed["accuracy"]

  return product_name, accuracy


from datetime import date

# --- 1) Системная инструкция для модели ---
SYSTEM_PROMPT_FOR_SAVINGS = """Ты пишешь короткие пуш-уведомления про финансы.
Тон: на равных, просто и по-человечески; обращение на «вы» (с маленькой буквы).
Важное — в начале, без воды/канцеляризмов/пассивного залога. Без морали и давления.
Можно лёгкий, ненавязчивый юмор; максимум один уместный эмодзи. Без жаргона «в лоб».
Для молодёжи (<25): чуть живее; для постарше (>=25): серьёзнее, спокойнее.
Формат и редполитика:
- Длина пуша: 100-150 символов.
- Без КАПС; максимум один «!» и только по делу.
- Даты: дд.мм.гггг или «30 августа 2025» — где уместно.
- Числа: дробная часть — запятая; разряды — пробелы.
- Валюта: в приложении — «₸», в SMS — «тг»; знак/код отделяется пробелом (напр. 2 490 ₸ / 2 490 тг).
- Кнопки/ссылки называй глаголами: «Открыть», «Настроить», «Посмотреть».
- Никаких крикливых обещаний, давления и дефицита.
- Варианты текста должны звучать по-разному: используй разные конструкции, порядок слов и стили (от лаконичных до чуть более образных).
- Допускается лёгкая метафора или сравнение (не более одного за пуш).
- Начало сообщения может меняться: иногда прямо с выгоды, иногда с ситуации/наблюдения.
- Добавляй разные связки: «по итогу», «вышло бы», «можно было бы», «получилось бы» вместо шаблонного «вы могли сэкономить».
- Не делай пуши однотипными — меняй глаголы действия («узнать», «открыть», «попробовать», «посмотреть»).
- ВНИМАНИЕ: если выгода 0.00 ₸, то не упоминай выгоду вообще, а просто предложи продукт, но без намека на бедность.
Выводи только итоговый текст пуша, без комментариев и префиксов.
"""

# --- 2) Пользовательский шаблон запроса ---
USER_PROMPT_TEMPLATE_FOR_SAVINGS = """Дано:
- Имя: {name}
- Возраст: {age}
- Потенциальная экономия: {profit_fmt} ₸
- Канал: {channel_label}{product_line}

Задача:
1) Скажи о выгоде {profit_fmt} ₸, но формулировку подавай по-разному (не повторяйся).
2) Коротко предложи продукт или действие; стиль может быть чуть разнообразнее (от прямого до намёка).
3) Учитывай тон по возрасту.
4) Заверши корректным призывом: «Открыть», «Настроить» или «Посмотреть» (вариативно).


Сгенерируй один пуш (100-150 символов)."""

def build_messages(name: str,
                   age: int,
                   profit: float | int,
                   product_type: str | None = None) -> list[dict]:

    product_line = f"\n- Рекомендуемый продукт: {product_type}" if product_type else ""

    user_prompt = USER_PROMPT_TEMPLATE_FOR_SAVINGS.format(
        name=name,
        age=age,
        profit_fmt=f"{profit:,.2f}",
        channel_label="приложение",
        product_line=product_line
    )

    return [
        {"role": "system", "content": SYSTEM_PROMPT_FOR_SAVINGS},
        {"role": "user", "content": user_prompt},
    ]


def generate_push_notification(name: str,
                               age: int,
                               profit: float | int,
                               product_type: str | None = None,
                              ) -> str:
    from openai import OpenAI

    messages = build_messages(name, age, profit, product_type)

    client = OpenAI()

    response = client.chat.completions.create(
        model="gpt-4o-mini",
        messages=messages,
        temperature=0.7
    )

    push_text = response.choices[0].message.content.strip()
    return push_text



SYSTEM_PROMPT_NO_PROFIT = """Ты пишешь короткие пуш-уведомления про финансы.
Тон: на равных, просто и по-человечески; обращение на «вы».
Важное — в начале, без воды/канцеляризмов/пассивного залога. Без морали и давления.
Допускается лёгкий, ненавязчивый юмор; максимум один уместный эмодзи. Без жаргона «в лоб».
Для молодёжи (<25): чуть живее; для постарше (>=25): спокойнее.

Формат и редполитика:
- Длина пуша: 100–150 символов.
- Без КАПС; максимум один «!» и только по делу.
- Даты: дд.мм.гггг или «30 августа 2025» — где уместно.
- Числа: дробная часть — запятая; разряды — пробелы.
- Валюта: в приложении — «₸», в SMS — «тг» (через пробел: 2 490 ₸ / 2 490 тг).
- Кнопки/ссылки называй глаголами: «Открыть», «Настроить», «Посмотреть», «Узнать».
- Избегай крикливых обещаний, давления и дефицита.

Разнообразие:
- Меняй конструкции, порядок слов и глаголы действия.
- Можно начинать как с действия, так и с наблюдения/контекста.
- Допускается лёгкая метафора (не более одной).

Выводи только итоговый текст пуша, без комментариев и префиксов.
"""


USER_PROMPT_TEMPLATE_NO_PROFIT = """Дано:
- Имя: {name}
- Возраст: {age}
- Канал: {channel_label}
- Продукт: {product_type}
- Контекст (опционально): fx_curr={fx_curr}, deposit_type={deposit_type}, note={context_note}

Задача:
1) Коротко и по делу предложи {product_type}, без упоминания сумм/выгоды.
2) Учитывай тон по возрасту: <25 — живее; 25+ — спокойнее.
3) Заверши призывом: «Открыть», «Настроить», «Посмотреть» или «Узнать».
4) 100–150 символов. Варьируй формулировки (без повтора шаблонов).
Сгенерируй один пуш.
"""